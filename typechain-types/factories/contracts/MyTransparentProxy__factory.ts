/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MyTransparentProxy,
  MyTransparentProxyInterface,
} from "../../contracts/MyTransparentProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialImplementation",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVersion",
        type: "uint256",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "VersionAcknowledged",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "acknowledgeVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserAcknowledgedVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "getVersionToImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61016060405234801561001157600080fd5b50604051611c6d380380611c6d83398101604081905261003091610436565b8282828282826001600160a01b03811661006557604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61006e81610144565b5061007a826001610194565b61012052610089816002610194565b61014052815160208084019190912060e052815190820120610100524660a05261011660e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05261012960006101c7565b50505061013b846101e160201b60201c565b50505050610680565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020835110156101b0576101a9836102cd565b90506101c1565b816101bb848261054a565b5060ff90505b92915050565b6101de600080516020611c4d833981519152829055565b50565b6101e961030b565b6001600160a01b03811661023f5760405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420696d706c656d656e746174696f6e20616464726573730000604482015260640161005c565b600061024961033a565b610254906001610608565b905061025f816101c7565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416179055816001600160a01b03167f5887ab9161c3be2fe962b73e068a9f29082efb6daf2bfcbd3f064bc34d1ef1b7826040516102c191815260200190565b60405180910390a25050565b600080829050601f815111156102f8578260405163305a27a960e01b815260040161005c9190610629565b80516103038261065c565b179392505050565b6000546001600160a01b031633146103385760405163118cdaa760e01b815233600482015260240161005c565b565b6000610352600080516020611c4d8339815191525490565b905090565b80516001600160a01b038116811461036e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103a457818101518382015260200161038c565b50506000910152565b600082601f8301126103be57600080fd5b81516001600160401b038111156103d7576103d7610373565b604051601f8201601f19908116603f011681016001600160401b038111828210171561040557610405610373565b60405281815283820160200185101561041d57600080fd5b61042e826020830160208701610389565b949350505050565b6000806000806080858703121561044c57600080fd5b61045585610357565b60208601519094506001600160401b0381111561047157600080fd5b61047d878288016103ad565b604087015190945090506001600160401b0381111561049b57600080fd5b6104a7878288016103ad565b9250506104b660608601610357565b905092959194509250565b600181811c908216806104d557607f821691505b6020821081036104f557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561054557806000526020600020601f840160051c810160208510156105225750805b601f840160051c820191505b81811015610542576000815560010161052e565b50505b505050565b81516001600160401b0381111561056357610563610373565b6105778161057184546104c1565b846104fb565b6020601f8211600181146105ab57600083156105935750848201515b600019600385901b1c1916600184901b178455610542565b600084815260208120601f198516915b828110156105db57878501518255602094850194600190920191016105bb565b50848210156105f95786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156101c157634e487b7160e01b600052601160045260246000fd5b6020815260008251806020840152610648816040850160208701610389565b601f01601f19169190910160400192915050565b805160208083015191908110156104f55760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516115736106da6000396000610b3401526000610b0701526000610e0e01526000610de601526000610d4101526000610d6b01526000610d9501526115736000f3fe6080604052600436106100955760003560e01c8063715018a611610059578063715018a61461026b57806384b0196e146102805780638da5cb5b146102a8578063f2fde38b146102c6578063fabec44a146102e65761019a565b80632d57f1c6146101ab5780633659cfe6146101cb5780633b70c9a0146101eb5780635c60da1b1461022857806367e294b21461023d5761019a565b3661019a576000546001600160a01b03165b6001600160a01b031633036101035760405162461bcd60e51b815260206004820152601f60248201527f4f776e65722063616e6e6f742063616c6c20746869732066756e6374696f6e0060448201526064015b60405180910390fd5b600061010d6102fb565b33600090815260036020526040902054909150811461018857600061013061032a565b60405160200161014091906110c3565b60405160208183030381529060405290508060405160200161016291906110df565b60408051601f198184030181529082905262461bcd60e51b82526100fa9160040161116b565b610198610193610455565b610462565b005b6000546001600160a01b03166100a7565b3480156101b757600080fd5b506101986101c636600461119b565b610486565b3480156101d757600080fd5b506101986101e6366004611254565b6105b6565b3480156101f757600080fd5b5061020b61020636600461127d565b610696565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561023457600080fd5b5061020b6106b5565b34801561024957600080fd5b5061025d610258366004611254565b6106bf565b60405190815260200161021f565b34801561027757600080fd5b506101986106dd565b34801561028c57600080fd5b506102956106f1565b60405161021f9796959493929190611296565b3480156102b457600080fd5b506000546001600160a01b031661020b565b3480156102d257600080fd5b506101986102e1366004611254565b610737565b3480156102f257600080fd5b5061025d610775565b60006103257ffa612f219094dda999cf2ee00fb7b97ecb31d820fedbbaecb6aad712d0cac2c45490565b905090565b336000908152600360209081526040808320548352600490915281205460609190610395906001600160a01b03165b604051602001610381919060609190911b6bffffffffffffffffffffffff1916815260140190565b60405160208183030381529060405261077f565b6040516020016103a5919061132e565b604051602081830303815290604052905060006103e16103596103c66102fb565b6000908152600460205260409020546001600160a01b031690565b6040516020016103f1919061132e565b60408051601f198184030181529181523360009081526003602052205490915061041a9061091a565b8261042b6104266102fb565b61091a565b8360405160200161043f9493929190611383565b6040516020818303038152906040529250505090565b60006103256103c66102fb565b3660008037600080366000845af43d6000803e808015610481573d6000f35b3d6000fd5b6000546001600160a01b031633036104e05760405162461bcd60e51b815260206004820152601f60248201527f4f776e65722063616e6e6f742063616c6c20746869732066756e6374696f6e0060448201526064016100fa565b60006104ea6102fb565b33600090815260036020526040902054909150811161050e5761050e610193610455565b610521338261051b61032a565b856109ad565b6105665760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081858dadb9bdddb195919db595b9d60521b60448201526064016100fa565b3360008181526003602052604090819020839055517fb2750fb49563752ac33e16422b7de9722a51607e258f2fd22fb0c55a8804d8fa906105aa9084815260200190565b60405180910390a25050565b6105be610a5a565b6001600160a01b0381166106145760405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420696d706c656d656e746174696f6e2061646472657373000060448201526064016100fa565b600061061e6102fb565b6106299060016114ad565b905061063481610a87565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416179055816001600160a01b03167f5887ab9161c3be2fe962b73e068a9f29082efb6daf2bfcbd3f064bc34d1ef1b7826040516105aa91815260200190565b6000818152600460205260408120546001600160a01b03165b92915050565b6000610325610455565b6001600160a01b0381166000908152600360205260408120546106af565b6106e5610a5a565b6106ef6000610ab0565b565b600060608060008060006060610705610b00565b61070d610b2d565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b61073f610a5a565b6001600160a01b03811661076957604051631e4fbdf760e01b8152600060048201526024016100fa565b61077281610ab0565b50565b60006103256102fb565b60408051808201909152601081526f181899199a1a9b1b9c1cb0b131b232b360811b60208201528151606091906000906107ba9060026114c0565b67ffffffffffffffff8111156107d2576107d2611185565b6040519080825280601f01601f1916602001820160405280156107fc576020820181803683370190505b50905060005b845181101561091257826004868381518110610820576108206114d7565b016020015182516001600160f81b031990911690911c60f81c908110610848576108486114d7565b01602001516001600160f81b031916826108638360026114c0565b81518110610873576108736114d7565b60200101906001600160f81b031916908160001a9053508285828151811061089d5761089d6114d7565b602091010151815160f89190911c600f169081106108bd576108bd6114d7565b01602001516001600160f81b031916826108d88360026114c0565b6108e39060016114ad565b815181106108f3576108f36114d7565b60200101906001600160f81b031916908160001a905350600101610802565b509392505050565b6060600061092783610b5a565b600101905060008167ffffffffffffffff81111561094757610947611185565b6040519080825280601f01601f191660200182016040528015610971576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461097b57509392505050565b6000807feacf654f9eb57c0fc9b51c946d3609e17608874f75f50d3caac0e72f3cac96c886868680519060200120604051602001610a0d94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b6040516020818303038152906040528051906020012090506000610a3082610c32565b90506000610a3e8286610c5f565b6001600160a01b03908116908916149350505050949350505050565b6000546001600160a01b031633146106ef5760405163118cdaa760e01b81523360048201526024016100fa565b6107727ffa612f219094dda999cf2ee00fb7b97ecb31d820fedbbaecb6aad712d0cac2c4829055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606103257f00000000000000000000000000000000000000000000000000000000000000006001610c89565b60606103257f00000000000000000000000000000000000000000000000000000000000000006002610c89565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610b995772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610bc5576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610be357662386f26fc10000830492506010015b6305f5e1008310610bfb576305f5e100830492506008015b6127108310610c0f57612710830492506004015b60648310610c21576064830492506002015b600a83106106af5760010192915050565b60006106af610c3f610d34565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600080610c6f8686610e5f565b925092509250610c7f8282610eac565b5090949350505050565b606060ff8314610ca357610c9c83610f69565b90506106af565b818054610caf906114ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610cdb906114ed565b8015610d285780601f10610cfd57610100808354040283529160200191610d28565b820191906000526020600020905b815481529060010190602001808311610d0b57829003601f168201915b505050505090506106af565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610d8d57507f000000000000000000000000000000000000000000000000000000000000000046145b15610db757507f000000000000000000000000000000000000000000000000000000000000000090565b610325604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60008060008351604103610e995760208401516040850151606086015160001a610e8b88828585610fa8565b955095509550505050610ea5565b50508151600091506002905b9250925092565b6000826003811115610ec057610ec0611527565b03610ec9575050565b6001826003811115610edd57610edd611527565b03610efb5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610f0f57610f0f611527565b03610f305760405163fce698f760e01b8152600481018290526024016100fa565b6003826003811115610f4457610f44611527565b03610f65576040516335e2f38360e21b8152600481018290526024016100fa565b5050565b60606000610f7683611077565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610fe3575060009150600390508261106d565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611037573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166110635750600092506001915082905061106d565b9250600091508190505b9450945094915050565b600060ff8216601f8111156106af57604051632cd44ac360e21b815260040160405180910390fd5b60005b838110156110ba5781810151838201526020016110a2565b50506000910152565b600082516110d581846020870161109f565b9190910192915050565b7f4552524f525f434f44455f313a20506c656173652061636b6e6f776c656467658152710103a3432903732bb903b32b939b4b7b710960751b60208201526000825161113281603285016020870161109f565b9190910160320192915050565b6000815180845261115781602086016020860161109f565b601f01601f19169290920160200192915050565b60208152600061117e602083018461113f565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156111ad57600080fd5b813567ffffffffffffffff8111156111c457600080fd5b8201601f810184136111d557600080fd5b803567ffffffffffffffff8111156111ef576111ef611185565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561121e5761121e611185565b60405281815282820160200186101561123657600080fd5b81602084016020830137600091810160200191909152949350505050565b60006020828403121561126657600080fd5b81356001600160a01b038116811461117e57600080fd5b60006020828403121561128f57600080fd5b5035919050565b60ff60f81b8816815260e0602082015260006112b560e083018961113f565b82810360408401526112c7818961113f565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b8181101561131d5783518352602093840193909201916001016112ff565b50909b9a5050505050505050505050565b7f2868747470733a2f2f65746865727363616e2e696f2f616464726573732f307881526000825161136681602085016020870161109f565b6523636f64652960d01b6020939091019283015250602601919050565b7f596f75206172652063757272656e746c79206f6e2076657273696f6e200000008152600085516113bb81601d850160208a0161109f565b600160fd1b601d9184019182015285516113dc81601e840160208a0161109f565b601d818301019150507f2e20546865206e65776573742076657273696f6e2069732076657273696f6e206001820152845161141e81602184016020890161109f565b600181830101915050600160fd1b6020820152835161144481602184016020880161109f565b7f2e20506c65617365207369676e2074686973206d65737361676520746f20636f6021929091019182015271373334b936903a3432903ab833b930b2329760711b60418201526053019695505050505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106af576106af611497565b80820281158282048414176106af576106af611497565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061150157607f821691505b60208210810361152157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220a1afbab7ad98f7fb38548c8b036fbdfc9131369ac07eecd61da564163218f12f64736f6c634300081c0033fa612f219094dda999cf2ee00fb7b97ecb31d820fedbbaecb6aad712d0cac2c4";

type MyTransparentProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTransparentProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyTransparentProxy__factory extends ContractFactory {
  constructor(...args: MyTransparentProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialImplementation: AddressLike,
    name: string,
    version: string,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialImplementation,
      name,
      version,
      owner,
      overrides || {}
    );
  }
  override deploy(
    initialImplementation: AddressLike,
    name: string,
    version: string,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialImplementation,
      name,
      version,
      owner,
      overrides || {}
    ) as Promise<
      MyTransparentProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyTransparentProxy__factory {
    return super.connect(runner) as MyTransparentProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTransparentProxyInterface {
    return new Interface(_abi) as MyTransparentProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MyTransparentProxy {
    return new Contract(address, _abi, runner) as unknown as MyTransparentProxy;
  }
}
