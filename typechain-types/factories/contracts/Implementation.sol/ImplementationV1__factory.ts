/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ImplementationV1,
  ImplementationV1Interface,
} from "../../../contracts/Implementation.sol/ImplementationV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "newValue",
        type: "int256",
      },
    ],
    name: "TotalValueChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_num1",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_num2",
        type: "int256",
      },
    ],
    name: "sum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalValue",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506101ad8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80639967062d1461003b578063d4c3eea014610050575b600080fd5b61004e61004936600461011f565b61006a565b005b6100586100ba565b60405190815260200160405180910390f35b61007c6100778284610141565b6100c9565b7fb2c7e32a7456258260ed4df8e5b860d6198099383c94b274021bfd9a6f7ac87a6100a56100f5565b60405190815260200160405180910390a15050565b60006100c46100f5565b905090565b6100f27f7143077388da7263f151574bb8b431587ba155ce26e1a98a058a9a5b7c458d3b829055565b50565b60006100c47f7143077388da7263f151574bb8b431587ba155ce26e1a98a058a9a5b7c458d3b5490565b6000806040838503121561013257600080fd5b50508035926020909101359150565b808201828112600083128015821682158216171561016f57634e487b7160e01b600052601160045260246000fd5b50509291505056fea2646970667358221220c02acbbbb85af2e8ea430d9c31ff552bce0d29c48a5dd503f3aa749d71c897cf64736f6c634300081c0033";

type ImplementationV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ImplementationV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ImplementationV1__factory extends ContractFactory {
  constructor(...args: ImplementationV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ImplementationV1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ImplementationV1__factory {
    return super.connect(runner) as ImplementationV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ImplementationV1Interface {
    return new Interface(_abi) as ImplementationV1Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ImplementationV1 {
    return new Contract(address, _abi, runner) as unknown as ImplementationV1;
  }
}
