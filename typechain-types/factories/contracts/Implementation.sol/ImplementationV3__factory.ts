/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ImplementationV3,
  ImplementationV3Interface,
} from "../../../contracts/Implementation.sol/ImplementationV3";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "newValue",
        type: "int256",
      },
    ],
    name: "TotalValueChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "acknowledgeVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_num1",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_num2",
        type: "int256",
      },
    ],
    name: "multiply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_num1",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_num2",
        type: "int256",
      },
    ],
    name: "subtract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_num1",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_num2",
        type: "int256",
      },
    ],
    name: "sum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalValue",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061039e8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632d57f1c61461005c5780633c4308a8146100715780639967062d14610084578063b93ea81214610097578063d4c3eea0146100aa575b600080fd5b61006f61006a3660046101f2565b6100c4565b005b61006f61007f3660046102ab565b61010d565b61006f6100923660046102ab565b61015d565b61006f6100a53660046102ab565b61016a565b6100b2610177565b60405190815260200160405180910390f35b6100d06298967f610186565b7fb2c7e32a7456258260ed4df8e5b860d6198099383c94b274021bfd9a6f7ac87a6100f96101b2565b60405190815260200160405180910390a150565b61011f61011a82846102e3565b610186565b7fb2c7e32a7456258260ed4df8e5b860d6198099383c94b274021bfd9a6f7ac87a6101486101b2565b60405190815260200160405180910390a15050565b61011f61011a8284610319565b61011f61011a8284610341565b60006101816101b2565b905090565b6101af7f7143077388da7263f151574bb8b431587ba155ce26e1a98a058a9a5b7c458d3b829055565b50565b60006101817f7143077388da7263f151574bb8b431587ba155ce26e1a98a058a9a5b7c458d3b5490565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561020457600080fd5b813567ffffffffffffffff81111561021b57600080fd5b8201601f8101841361022c57600080fd5b803567ffffffffffffffff811115610246576102466101dc565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610275576102756101dc565b60405281815282820160200186101561028d57600080fd5b81602084016020830137600091810160200191909152949350505050565b600080604083850312156102be57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b80820260008212600160ff1b841416156102ff576102ff6102cd565b8181058314821517610313576103136102cd565b92915050565b8082018281126000831280158216821582161715610339576103396102cd565b505092915050565b8181036000831280158383131683831282161715610361576103616102cd565b509291505056fea264697066735822122055dfa0ef5b9f806e31c9f4b37844372904454c7cf3f3f98d781f157104f703b664736f6c634300081c0033";

type ImplementationV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ImplementationV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ImplementationV3__factory extends ContractFactory {
  constructor(...args: ImplementationV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ImplementationV3 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ImplementationV3__factory {
    return super.connect(runner) as ImplementationV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ImplementationV3Interface {
    return new Interface(_abi) as ImplementationV3Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ImplementationV3 {
    return new Contract(address, _abi, runner) as unknown as ImplementationV3;
  }
}
